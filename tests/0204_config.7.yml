---

- name: "{{ test }}"
  hosts: debian
  become: true
  tasks:

    - block:
        - import_tasks: pre_tasks/elasticsearch_7.yml
        - import_tasks: pre_tasks/backports.yml
          when: ansible_distribution_release in ['jessie']
        - apt:
            name: "{{ {
              'jessie': 'openjdk-8-jre-headless',
              'stretch': 'openjdk-8-jre-headless',
              'buster': 'openjdk-11-jre-headless',
            }[ansible_distribution_release] }}"
            install_recommends: false

    - block:
        - file:
            path: tmp/config/default
            state: "{{ item }}"
          loop: [absent, directory]
        # Default
        - import_role:
            # Play role fully on first run, so that handlers don't breaks
            name: manala.elasticsearch
          vars:
            manala_elasticsearch_config_file: tmp/config/default/default.yml
            manala_elasticsearch_config:
              cluster:
                name: foo
              path.data: /foo/bar
        # Default - Deprecated
        - import_role:
            name: manala.elasticsearch
            tasks_from: config
          vars:
            manala_elasticsearch_config_file: tmp/config/default/default_deprecated.yml
            manala_elasticsearch_config:
              - cluster.name: foo
              - path.data: /foo/bar
        # Default - Content
        - import_role:
            name: manala.elasticsearch
            tasks_from: config
          vars:
            manala_elasticsearch_config_file: tmp/config/default/default_content.yml
            manala_elasticsearch_config: |
              cluster:
                  name: foo
              path.data: /foo/bar
        # Template
        - import_role:
            name: manala.elasticsearch
            tasks_from: config
          vars:
            manala_elasticsearch_config_file: tmp/config/default/template.yml
            manala_elasticsearch_config_template: config/elasticsearch/elasticsearch.yml.j2
            manala_elasticsearch_config:
              cluster:
                  name: foo
              path:
                data: /foo/bar
      always:
        - name: Wait for pretty response
          uri:
            url: http://localhost:9200/?pretty
          register: result
          until: result.status == 200
          retries: 60
          delay: 1
        - name: Goss
          command: >
            goss --gossfile {{ test }}.goss.yml validate
